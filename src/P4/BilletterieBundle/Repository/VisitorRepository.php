<?php

namespace P4\BilletterieBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * VisitorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VisitorRepository extends \Doctrine\ORM\EntityRepository
{	
	public function getDateVisitorMax () 
	{

		$rsm = new ResultSetMappingBuilder($this->_em);

		$rsm->addRootEntityFromClassMetadata('P4\BilletterieBundle\Entity\Visitor', 'v', array('id' => 'id1',));

		$rsm->addJoinedEntityFromClassMetadata('P4\BilletterieBundle\Entity\Booking', 'b', 'v', 'id', array('id' => 'id2',));

		$sql = 'SELECT COUNT(v.booking_id) AS nbrVisiteurParBooking, b.bookingDate FROM p4_visitor AS v INNER JOIN p4_booking AS b ON v.booking_id = b.id GROUP BY b.bookingDate HAVING nbrVisiteurParBooking >= 5 ORDER BY b.bookingDate DESC';
		
		$query = $this->_em->createNativeQuery($sql, $rsm);
		return $query->getScalarResult();
	}

	public function getDateVisitorMaxArray ()
	{
		$dates = $this->getDateVisitorMax();

		$res = "[";
		foreach ($dates as $key => $value) {
			$res = $res . '"' .$value['b_bookingDate'] . '"';
			if ($key < sizeof($dates)-1 )
			{
				$res = $res . ',';
			}
		}
		$res = $res . ']';
		return $res;
	}		
}
